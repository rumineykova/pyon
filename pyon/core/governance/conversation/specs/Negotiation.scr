package ooi.confluence.Negotiation;
type <xsd> "SAPDoc1" from "SAPDoc1.xsd" as SAP;
type <python> "string" from "Lib/string.py" as string;

global protocol Negotiation(role Initiator, role CounterParty) {
	propose(SAP) from Initiator to CounterParty;
	rec START {
		choice at CounterParty {
			accept() from CounterParty to Initiator;
			(confirm:string) from Initiator to CounterParty;
		} or {
			propose(SAP) from CounterParty to Initiator;
			// CounterParty agrees with parts of SAP proposed by Initiatr, but not all of it.
			// CounterParty thus proposes another SAP and sends it to Initiator.
			choice at Initiator {
				accept() from Initiator to CounterParty;
				(confirm:string) from CounterParty to Initiator;
				// end
			} or {
				reject() from Initiator to CounterParty;
				// end
			} or {
				propose(SAP) from Initiator to CounterParty;
				continue START; // Protocol flow returns to START recursion point
			}
		} or {
			reject() from CounterParty to Initiator;
			// end
		}
	}
}


/**
 * Implicit reverse proposal direction by swapping roles.
 */

global protocol Negotiation2(role Initiator, role CounterParty) {
	propose(SAP) from Initiator to CounterParty;
	do NegotiationAux(Initiator as Initiator, CounterParty as CounterParty);
}

global protocol NegotiationAux(role Initiator, role CounterParty) {
		choice at CounterParty {
			accept() from CounterParty to Initiator;
			confirm() from Initiator to CounterParty;
		} or {
			propose(SAP) from CounterParty to Initiator;
			do NegotiationAux(CounterParty as Initiator, Initiator as CounterParty);
		} or{
			reject() from CounterParty to Initiator;
		}
	}
}

